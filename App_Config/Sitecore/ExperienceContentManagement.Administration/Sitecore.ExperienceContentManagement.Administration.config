<?xml version="1.0" encoding="utf-8" ?>
<configuration xmlns:search="http://www.sitecore.net/xmlconfig/search/" xmlns:role="http://www.sitecore.net/xmlconfig/role/" xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <api>
      <services>
        <configuration>
          <allowedControllers>
            <allowedController desc="SupportPackageFileController">Sitecore.ExperienceContentManagement.Administration.Controllers.SupportPackageFileController,Sitecore.ExperienceContentManagement.Administration</allowedController>
            <allowedController desc="SupportPackageRequestController">Sitecore.ExperienceContentManagement.Administration.Controllers.SupportPackageRequestController,Sitecore.ExperienceContentManagement.Administration</allowedController>
          </allowedControllers>
        </configuration>
      </services>
    </api>
    <commands>
      <command name="admin:showadminpage" type="Sitecore.ExperienceContentManagement.Administration.Commands.ShowAdminPage,Sitecore.ExperienceContentManagement.Administration" role:require="ContentManagement or Standalone"/>
    </commands>
    <events>
      <event name="support:package:requested">
        <handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnRequested" />
      </event>
      <event name="support:package:requested:remote">
        <handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnRequested" />
      </event>
      <event name="support:package:generating">
        <handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnGenerating" />
      </event>
      <event name="support:package:generating:remote">
        <handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnGenerating" />
      </event>
      <event name="support:package:generated">
        <handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnGenerated" />
      </event>
      <event name="support:package:generated:remote">
        <handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnGenerated" />
      </event>
      <event name="support:package:cleanup">
        <handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnCleanup" />
      </event>
      <event name="support:package:cleanup:remote">
        <handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnCleanup" />
      </event>
    </events>
    <hooks>
      <hook type="Sitecore.ExperienceContentManagement.Administration.Hooks.SupportPackageHook, Sitecore.ExperienceContentManagement.Administration" />
    </hooks>    
    <settings>
      <!--  SUPPORT PACKAGE RESPONSE TIMEOUT
            Specifies the time out for responding to support package generation requests by remote Sitecore instances. 
            Default value: 00:00:30
      -->
      <setting name="SupportPackage.ResponseTimeout" value="00:00:30" />
      <!--  SUPPORT PACKAGE COLLECTION TIMEOUT
            Specifies the time out for generating support packages by remote Sitecore instances. 
            Default value: 00:05:00
      -->
      <setting name="SupportPackage.CollectionTimeout" value="00:05:00" />
      <!--  SUPPORT PACKAGE DIAGNOSTICS SERVICE URL
            Specifies the diagnostics service endpoint URL for support package uploading.
            Default value: https://diagnostics.cloud.sitecore.net/api/v1
      -->
      <setting name="SupportPackage.DiagnosticsServiceUrl" value="https://diagnostics.cloud.sitecore.net/api/v1" />
    </settings>
    <log4net search:require="Azure">
      <!--  AZURE FALLBACK APPENDER
            The appender is only designed to work in Azure PaaS environment to be used by automatic diagnostics and support package collection tools.
            The Azure environment is detected automatically, otherwise the appender is disabled.
      -->
      <appender name="AzureFallbackAppender" type="Sitecore.ExperienceContentManagement.Administration.Logging.AzureFallbackAppender, Sitecore.ExperienceContentManagement.Administration">
        <file value="$(dataFolder)/logs/{machineName}/azure.{date}.{time}.txt" />
        <appendToFile value="true" />
        <rollingStyle value="Size" />
        <maxSizeRollBackups value="-1" />
        <maximumFileSize value="10MB" />
        <immediateFlush value="false" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
        </layout>
        <encoding value="utf-8" />
      </appender>
      <root>
        <appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
      </root>
      <logger name="Sitecore.Diagnostics.Publishing">
        <appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
      </logger>
      <logger name="ClientRoot">
        <appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
      </logger>
      <logger name="Sitecore.Owin.Diagnostics">
        <appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
      </logger>
      <logger name="Sitecore.Diagnostics.Search">
        <appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
      </logger>
      <logger name="Sitecore.Diagnostics.Crawling">
        <appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
      </logger>
      <logger name="Sitecore.FXM.Diagnostics">
        <appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
      </logger>
      <logger name="Sitecore.EDS">
        <appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
      </logger>
      <logger name="Sitecore.EXM">
        <appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
      </logger>    
    </log4net>
  </sitecore>
</configuration>
